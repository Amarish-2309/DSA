Link : - https://leetcode.com/problems/binary-tree-maximum-path-sum/
Solution:-
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int path(TreeNode* root,int &d){
    if(root ==NULL) return 0;
    // if(root->val)
    int lh=max(0,path(root->left,d));
    int rh=max(0,path(root->right,d));
    d=max(d,lh+rh+root->val);
     return root->val +max(lh,rh);
    // return d;
}
    int maxPathSum(TreeNode* root) {
        int d=INT_MIN;
        path(root,d);
        return d;
    }
};
 
