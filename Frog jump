link:-https://www.codingninjas.com/studio/problems/frog-jump_3621012?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0
Solution:-
#include <bits/stdc++.h>

int solve(int ind, vector<int> &heights,vector<int>&dp) {
    if(ind==0) return 0;
    if(dp[ind]!=-1) return dp[ind];
    int left =solve(ind-1,heights,dp) + abs(heights[ind]- heights[ind-1]);
    int right =INT_MAX;
    if(ind>1) right=solve(ind-2,heights,dp) + abs(heights[ind]- heights[ind-2]);
    return dp[ind]=min(left,right);
}
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
    // int ind=0;
    vector<int>dp(n+1,-1);
    return solve(n-1,heights,dp);
}


Solution 2:-


int frogJump(int n, vector<int> &heights)
{
int prev=0;
int prev2=0;

for (int i = 1; i < n; i++) {
int fs= prev+abs(heights[i]- heights[i-1]);
int ss=INT_MAX;
if(i>1) ss= prev2+abs(heights[i]- heights[i-2]);


int curr=min(fs,ss);
prev2=prev;
prev=curr;
}
return prev;
}
