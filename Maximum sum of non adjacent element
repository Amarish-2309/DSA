link:-https://www.codingninjas.com/studio/problems/maximum-sum-of-non-adjacent-elements_843261?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=1
solution:-
#include <bits/stdc++.h> 
int f(vector<int> &nums,vector<int> &dp,int ind)
{
if(ind==0){
    return nums[ind];
}
if(ind<0) return 0;

int pick = nums[ind] + f(nums,dp,ind-2);
int notpick= 0 +f(nums,dp, ind-1) ;

return dp[ind]=max(pick,notpick);


}
int maximumNonAdjacentSum(vector<int> &nums){
    // Write your code here.
    int n=nums.size();
    vector<int>dp(n,-1);
    return f(nums,dp, n-1);
}







solution2:-
int maximumNonAdjacentSum(vector<int> &nums){
    // Write your code here.
    int n=nums.size();
    vector<int>dp(n,-1);
    // return f(nums,dp, n-1);
    if(n==0){
    return nums[n];
}
if(n<0) return 0;
int prev=nums[0];
int prev2 =  0;
int curr=0;
for (int i = 1; i < n; i++) {
int take =nums[i];
if(i>1) take += prev2;
int nottake=0+prev;
 curr=max(take,nottake);
prev2=prev ;
prev=curr;
}
return prev;
}

































